# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: repent.proto

require 'google/protobuf'


descriptor_data = "\n\x0crepent.proto\x12\x06repent\"\x1b\n\x0bJoinRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"R\n\x0eMessageContent\x12\x0e\n\x06sender\x18\x01 \x01(\t\x12\x0c\n\x04text\x18\x02 \x01(\t\x12\x15\n\x08receiver\x18\x03 \x01(\tH\x00\x88\x01\x01\x42\x0b\n\t_receiver\"\'\n\x07Message\x12\x0e\n\x06sender\x18\x01 \x01(\t\x12\x0c\n\x04text\x18\x02 \x01(\t\"\x07\n\x05\x45mpty2h\n\x08\x43hatRoom\x12.\n\x04Join\x12\x13.repent.JoinRequest\x1a\x0f.repent.Message0\x01\x12,\n\x03Say\x12\x16.repent.MessageContent\x1a\r.repent.Emptyb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Repent
  JoinRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("repent.JoinRequest").msgclass
  MessageContent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("repent.MessageContent").msgclass
  Message = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("repent.Message").msgclass
  Empty = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("repent.Empty").msgclass
end
